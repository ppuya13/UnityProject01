// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlayerActionType int32

const (
	PlayerActionType_PLAYER_ACTION_UNKNOWN    PlayerActionType = 0
	PlayerActionType_PLAYER_ACTION_MOVE       PlayerActionType = 1
	PlayerActionType_PLAYER_ACTION_ATTACK     PlayerActionType = 2
	PlayerActionType_PLAYER_ACTION_TAKEDAMAGE PlayerActionType = 3
	PlayerActionType_PLAYER_ACTION_DODGE      PlayerActionType = 4
)

// Enum value maps for PlayerActionType.
var (
	PlayerActionType_name = map[int32]string{
		0: "PLAYER_ACTION_UNKNOWN",
		1: "PLAYER_ACTION_MOVE",
		2: "PLAYER_ACTION_ATTACK",
		3: "PLAYER_ACTION_TAKEDAMAGE",
		4: "PLAYER_ACTION_DODGE",
	}
	PlayerActionType_value = map[string]int32{
		"PLAYER_ACTION_UNKNOWN":    0,
		"PLAYER_ACTION_MOVE":       1,
		"PLAYER_ACTION_ATTACK":     2,
		"PLAYER_ACTION_TAKEDAMAGE": 3,
		"PLAYER_ACTION_DODGE":      4,
	}
)

func (x PlayerActionType) Enum() *PlayerActionType {
	p := new(PlayerActionType)
	*p = x
	return p
}

func (x PlayerActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (PlayerActionType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x PlayerActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerActionType.Descriptor instead.
func (PlayerActionType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type KnockBackType int32

const (
	KnockBackType_KNOCKBACK_UNKNOWN KnockBackType = 0
	KnockBackType_KNOCKBACK_NONE    KnockBackType = 1
	KnockBackType_KNOCKBACK_UP      KnockBackType = 2
	KnockBackType_KNOCKBACK_PUSH    KnockBackType = 3
	KnockBackType_KNOCKBACK_PULL    KnockBackType = 4
	KnockBackType_KNOCKBACK_BOUND   KnockBackType = 5
	KnockBackType_KNOCKBACK_DOWN    KnockBackType = 6
)

// Enum value maps for KnockBackType.
var (
	KnockBackType_name = map[int32]string{
		0: "KNOCKBACK_UNKNOWN",
		1: "KNOCKBACK_NONE",
		2: "KNOCKBACK_UP",
		3: "KNOCKBACK_PUSH",
		4: "KNOCKBACK_PULL",
		5: "KNOCKBACK_BOUND",
		6: "KNOCKBACK_DOWN",
	}
	KnockBackType_value = map[string]int32{
		"KNOCKBACK_UNKNOWN": 0,
		"KNOCKBACK_NONE":    1,
		"KNOCKBACK_UP":      2,
		"KNOCKBACK_PUSH":    3,
		"KNOCKBACK_PULL":    4,
		"KNOCKBACK_BOUND":   5,
		"KNOCKBACK_DOWN":    6,
	}
)

func (x KnockBackType) Enum() *KnockBackType {
	p := new(KnockBackType)
	*p = x
	return p
}

func (x KnockBackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KnockBackType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[1].Descriptor()
}

func (KnockBackType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[1]
}

func (x KnockBackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KnockBackType.Descriptor instead.
func (KnockBackType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

type ParameterType int32

const (
	ParameterType_PARAMETER_UNKNOWN ParameterType = 0
	ParameterType_PARAMETER_INT     ParameterType = 1
	ParameterType_PARAMETER_FLOAT   ParameterType = 2
	ParameterType_PARAMETER_BOOL    ParameterType = 3
	ParameterType_PARAMETER_TRIGGER ParameterType = 4
)

// Enum value maps for ParameterType.
var (
	ParameterType_name = map[int32]string{
		0: "PARAMETER_UNKNOWN",
		1: "PARAMETER_INT",
		2: "PARAMETER_FLOAT",
		3: "PARAMETER_BOOL",
		4: "PARAMETER_TRIGGER",
	}
	ParameterType_value = map[string]int32{
		"PARAMETER_UNKNOWN": 0,
		"PARAMETER_INT":     1,
		"PARAMETER_FLOAT":   2,
		"PARAMETER_BOOL":    3,
		"PARAMETER_TRIGGER": 4,
	}
)

func (x ParameterType) Enum() *ParameterType {
	p := new(ParameterType)
	*p = x
	return p
}

func (x ParameterType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[2].Descriptor()
}

func (ParameterType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[2]
}

func (x ParameterType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParameterType.Descriptor instead.
func (ParameterType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

type ActionType int32

const (
	ActionType_MONSTER_ACTION_UNKNOWN         ActionType = 0
	ActionType_MONSTER_ACTION_SET_STATUS      ActionType = 1
	ActionType_MONSTER_ACTION_SET_TARGET      ActionType = 2 //바라볼 타겟을 설정
	ActionType_MONSTER_ACTION_SET_DESTINATION ActionType = 3 //이동할 목적지를 설정
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "MONSTER_ACTION_UNKNOWN",
		1: "MONSTER_ACTION_SET_STATUS",
		2: "MONSTER_ACTION_SET_TARGET",
		3: "MONSTER_ACTION_SET_DESTINATION",
	}
	ActionType_value = map[string]int32{
		"MONSTER_ACTION_UNKNOWN":         0,
		"MONSTER_ACTION_SET_STATUS":      1,
		"MONSTER_ACTION_SET_TARGET":      2,
		"MONSTER_ACTION_SET_DESTINATION": 3,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[3].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[3]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

type MonsterState int32

const (
	MonsterState_MONSTER_STATUS_UNKNOWN MonsterState = 0
	MonsterState_MONSTER_STATUS_SPAWN   MonsterState = 1
	MonsterState_MONSTER_STATUS_IDLE    MonsterState = 2
	MonsterState_MONSTER_STATUS_MOVE    MonsterState = 3
	MonsterState_MONSTER_STATUS_DASH    MonsterState = 4
	MonsterState_MONSTER_STATUS_DODGE   MonsterState = 5
	MonsterState_MONSTER_STATUS_ATTACK  MonsterState = 6
)

// Enum value maps for MonsterState.
var (
	MonsterState_name = map[int32]string{
		0: "MONSTER_STATUS_UNKNOWN",
		1: "MONSTER_STATUS_SPAWN",
		2: "MONSTER_STATUS_IDLE",
		3: "MONSTER_STATUS_MOVE",
		4: "MONSTER_STATUS_DASH",
		5: "MONSTER_STATUS_DODGE",
		6: "MONSTER_STATUS_ATTACK",
	}
	MonsterState_value = map[string]int32{
		"MONSTER_STATUS_UNKNOWN": 0,
		"MONSTER_STATUS_SPAWN":   1,
		"MONSTER_STATUS_IDLE":    2,
		"MONSTER_STATUS_MOVE":    3,
		"MONSTER_STATUS_DASH":    4,
		"MONSTER_STATUS_DODGE":   5,
		"MONSTER_STATUS_ATTACK":  6,
	}
)

func (x MonsterState) Enum() *MonsterState {
	p := new(MonsterState)
	*p = x
	return p
}

func (x MonsterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MonsterState) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[4].Descriptor()
}

func (MonsterState) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[4]
}

func (x MonsterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MonsterState.Descriptor instead.
func (MonsterState) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

type AttackType int32

const (
	AttackType_MONSTER_ATTACK_UNKNOWN AttackType = 0
	// 1~10 근접상태 공격
	AttackType_MONSTER_ATTACK_CLOSE_01      AttackType = 1 //두번썰고 발차기
	AttackType_MONSTER_ATTACK_CLOSE_02      AttackType = 2 //세번썰기
	AttackType_MONSTER_ATTACK_CLOSE_03      AttackType = 3 //뒤로구르고 베기
	AttackType_MONSTER_ATTACK_CLOSE_COUNTER AttackType = 4 //반격기
	// 11~20 근거리 공격
	AttackType_MONSTER_ATTACK_SHORTRANGE_01 AttackType = 11
	// 21~30 중거리 공격
	AttackType_MONSTER_ATTACK_MIDRANGE_01 AttackType = 21
	// 31~40 원거리 공격
	AttackType_MONSTER_ATTACK_LONGRANGE_01 AttackType = 31
	// 41~50 초장거리 공격
	AttackType_MONSTER_ATTACK_EXTRARANGE_01 AttackType = 41
)

// Enum value maps for AttackType.
var (
	AttackType_name = map[int32]string{
		0:  "MONSTER_ATTACK_UNKNOWN",
		1:  "MONSTER_ATTACK_CLOSE_01",
		2:  "MONSTER_ATTACK_CLOSE_02",
		3:  "MONSTER_ATTACK_CLOSE_03",
		4:  "MONSTER_ATTACK_CLOSE_COUNTER",
		11: "MONSTER_ATTACK_SHORTRANGE_01",
		21: "MONSTER_ATTACK_MIDRANGE_01",
		31: "MONSTER_ATTACK_LONGRANGE_01",
		41: "MONSTER_ATTACK_EXTRARANGE_01",
	}
	AttackType_value = map[string]int32{
		"MONSTER_ATTACK_UNKNOWN":       0,
		"MONSTER_ATTACK_CLOSE_01":      1,
		"MONSTER_ATTACK_CLOSE_02":      2,
		"MONSTER_ATTACK_CLOSE_03":      3,
		"MONSTER_ATTACK_CLOSE_COUNTER": 4,
		"MONSTER_ATTACK_SHORTRANGE_01": 11,
		"MONSTER_ATTACK_MIDRANGE_01":   21,
		"MONSTER_ATTACK_LONGRANGE_01":  31,
		"MONSTER_ATTACK_EXTRARANGE_01": 41,
	}
)

func (x AttackType) Enum() *AttackType {
	p := new(AttackType)
	*p = x
	return p
}

func (x AttackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttackType) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[5].Descriptor()
}

func (AttackType) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[5]
}

func (x AttackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttackType.Descriptor instead.
func (AttackType) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

type GameMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*GameMessage_LoginRequest
	//	*GameMessage_LoginResponse
	//	*GameMessage_LogoutRequest
	//	*GameMessage_LogoutResponse
	//	*GameMessage_GameStart
	//	*GameMessage_ChatMessage
	//	*GameMessage_Ping
	//	*GameMessage_Pong
	//	*GameMessage_PlayerInput
	//	*GameMessage_PlayerSpawn
	//	*GameMessage_PlayerAttackAnim
	//	*GameMessage_MonsterSpawn
	//	*GameMessage_MonsterPositionUpdate
	//	*GameMessage_MonsterAnim
	//	*GameMessage_MonsterAction
	//	*GameMessage_MonsterTakeDamage
	//	*GameMessage_ServerStarted
	Payload isGameMessage_Payload `protobuf_oneof:"payload"`
}

func (x *GameMessage) Reset() {
	*x = GameMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMessage) ProtoMessage() {}

func (x *GameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMessage.ProtoReflect.Descriptor instead.
func (*GameMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (m *GameMessage) GetPayload() isGameMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *GameMessage) GetLoginRequest() *LoginRequest {
	if x, ok := x.GetPayload().(*GameMessage_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (x *GameMessage) GetLoginResponse() *LoginResponse {
	if x, ok := x.GetPayload().(*GameMessage_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (x *GameMessage) GetLogoutRequest() *LogoutRequest {
	if x, ok := x.GetPayload().(*GameMessage_LogoutRequest); ok {
		return x.LogoutRequest
	}
	return nil
}

func (x *GameMessage) GetLogoutResponse() *LogoutResponse {
	if x, ok := x.GetPayload().(*GameMessage_LogoutResponse); ok {
		return x.LogoutResponse
	}
	return nil
}

func (x *GameMessage) GetGameStart() *GameStart {
	if x, ok := x.GetPayload().(*GameMessage_GameStart); ok {
		return x.GameStart
	}
	return nil
}

func (x *GameMessage) GetChatMessage() *ChatMessage {
	if x, ok := x.GetPayload().(*GameMessage_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (x *GameMessage) GetPing() *Ping {
	if x, ok := x.GetPayload().(*GameMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *GameMessage) GetPong() *Pong {
	if x, ok := x.GetPayload().(*GameMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *GameMessage) GetPlayerInput() *PlayerInput {
	if x, ok := x.GetPayload().(*GameMessage_PlayerInput); ok {
		return x.PlayerInput
	}
	return nil
}

func (x *GameMessage) GetPlayerSpawn() *PlayerSpawn {
	if x, ok := x.GetPayload().(*GameMessage_PlayerSpawn); ok {
		return x.PlayerSpawn
	}
	return nil
}

func (x *GameMessage) GetPlayerAttackAnim() *PlayerAttackAnim {
	if x, ok := x.GetPayload().(*GameMessage_PlayerAttackAnim); ok {
		return x.PlayerAttackAnim
	}
	return nil
}

func (x *GameMessage) GetMonsterSpawn() *MonsterSpawn {
	if x, ok := x.GetPayload().(*GameMessage_MonsterSpawn); ok {
		return x.MonsterSpawn
	}
	return nil
}

func (x *GameMessage) GetMonsterPositionUpdate() *MonsterPositionUpdate {
	if x, ok := x.GetPayload().(*GameMessage_MonsterPositionUpdate); ok {
		return x.MonsterPositionUpdate
	}
	return nil
}

func (x *GameMessage) GetMonsterAnim() *MonsterAnim {
	if x, ok := x.GetPayload().(*GameMessage_MonsterAnim); ok {
		return x.MonsterAnim
	}
	return nil
}

func (x *GameMessage) GetMonsterAction() *MonsterAction {
	if x, ok := x.GetPayload().(*GameMessage_MonsterAction); ok {
		return x.MonsterAction
	}
	return nil
}

func (x *GameMessage) GetMonsterTakeDamage() *MonsterTakeDamage {
	if x, ok := x.GetPayload().(*GameMessage_MonsterTakeDamage); ok {
		return x.MonsterTakeDamage
	}
	return nil
}

func (x *GameMessage) GetServerStarted() *ServerStarted {
	if x, ok := x.GetPayload().(*GameMessage_ServerStarted); ok {
		return x.ServerStarted
	}
	return nil
}

type isGameMessage_Payload interface {
	isGameMessage_Payload()
}

type GameMessage_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,1,opt,name=login_request,json=loginRequest,proto3,oneof"`
}

type GameMessage_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,2,opt,name=login_response,json=loginResponse,proto3,oneof"`
}

type GameMessage_LogoutRequest struct {
	LogoutRequest *LogoutRequest `protobuf:"bytes,3,opt,name=logout_request,json=logoutRequest,proto3,oneof"`
}

type GameMessage_LogoutResponse struct {
	LogoutResponse *LogoutResponse `protobuf:"bytes,4,opt,name=logout_response,json=logoutResponse,proto3,oneof"`
}

type GameMessage_GameStart struct {
	GameStart *GameStart `protobuf:"bytes,5,opt,name=game_start,json=gameStart,proto3,oneof"`
}

type GameMessage_ChatMessage struct {
	ChatMessage *ChatMessage `protobuf:"bytes,6,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}

type GameMessage_Ping struct {
	Ping *Ping `protobuf:"bytes,7,opt,name=ping,proto3,oneof"`
}

type GameMessage_Pong struct {
	Pong *Pong `protobuf:"bytes,8,opt,name=pong,proto3,oneof"`
}

type GameMessage_PlayerInput struct {
	// 플레이어 관련은 11~30
	PlayerInput *PlayerInput `protobuf:"bytes,11,opt,name=player_input,json=playerInput,proto3,oneof"`
}

type GameMessage_PlayerSpawn struct {
	PlayerSpawn *PlayerSpawn `protobuf:"bytes,12,opt,name=player_spawn,json=playerSpawn,proto3,oneof"`
}

type GameMessage_PlayerAttackAnim struct {
	PlayerAttackAnim *PlayerAttackAnim `protobuf:"bytes,13,opt,name=player_attack_anim,json=playerAttackAnim,proto3,oneof"`
}

type GameMessage_MonsterSpawn struct {
	// 몬스터관련은 31-40
	MonsterSpawn *MonsterSpawn `protobuf:"bytes,31,opt,name=monster_spawn,json=monsterSpawn,proto3,oneof"`
}

type GameMessage_MonsterPositionUpdate struct {
	MonsterPositionUpdate *MonsterPositionUpdate `protobuf:"bytes,32,opt,name=monster_position_update,json=monsterPositionUpdate,proto3,oneof"`
}

type GameMessage_MonsterAnim struct {
	MonsterAnim *MonsterAnim `protobuf:"bytes,33,opt,name=monster_anim,json=monsterAnim,proto3,oneof"`
}

type GameMessage_MonsterAction struct {
	MonsterAction *MonsterAction `protobuf:"bytes,34,opt,name=monster_action,json=monsterAction,proto3,oneof"`
}

type GameMessage_MonsterTakeDamage struct {
	MonsterTakeDamage *MonsterTakeDamage `protobuf:"bytes,35,opt,name=monster_take_damage,json=monsterTakeDamage,proto3,oneof"`
}

type GameMessage_ServerStarted struct {
	ServerStarted *ServerStarted `protobuf:"bytes,100,opt,name=server_started,json=serverStarted,proto3,oneof"`
}

func (*GameMessage_LoginRequest) isGameMessage_Payload() {}

func (*GameMessage_LoginResponse) isGameMessage_Payload() {}

func (*GameMessage_LogoutRequest) isGameMessage_Payload() {}

func (*GameMessage_LogoutResponse) isGameMessage_Payload() {}

func (*GameMessage_GameStart) isGameMessage_Payload() {}

func (*GameMessage_ChatMessage) isGameMessage_Payload() {}

func (*GameMessage_Ping) isGameMessage_Payload() {}

func (*GameMessage_Pong) isGameMessage_Payload() {}

func (*GameMessage_PlayerInput) isGameMessage_Payload() {}

func (*GameMessage_PlayerSpawn) isGameMessage_Payload() {}

func (*GameMessage_PlayerAttackAnim) isGameMessage_Payload() {}

func (*GameMessage_MonsterSpawn) isGameMessage_Payload() {}

func (*GameMessage_MonsterPositionUpdate) isGameMessage_Payload() {}

func (*GameMessage_MonsterAnim) isGameMessage_Payload() {}

func (*GameMessage_MonsterAction) isGameMessage_Payload() {}

func (*GameMessage_MonsterTakeDamage) isGameMessage_Payload() {}

func (*GameMessage_ServerStarted) isGameMessage_Payload() {}

// 3D 벡터를 표현하는 메시지
type GoVector3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *GoVector3) Reset() {
	*x = GoVector3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoVector3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoVector3) ProtoMessage() {}

func (x *GoVector3) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoVector3.ProtoReflect.Descriptor instead.
func (*GoVector3) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *GoVector3) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GoVector3) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GoVector3) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Ping) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Pong) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ServerStarted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerStarted) Reset() {
	*x = ServerStarted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStarted) ProtoMessage() {}

func (x *ServerStarted) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStarted.ProtoReflect.Descriptor instead.
func (*ServerStarted) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

// 로그인 요청 메시지
type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 사용자 이름, Stove에서 ulong(uint64)형식의 member_no를 받아온다. 아마 유니크할 것으로 보임.
	Nickname   string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	GameUserId string `protobuf:"bytes,3,opt,name=game_user_id,json=gameUserId,proto3" json:"game_user_id,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *LoginRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LoginRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LoginRequest) GetGameUserId() string {
	if x != nil {
		return x.GameUserId
	}
	return ""
}

// 로그인 응답 메시지
type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // 로그인 성공 여부
	PlayerId     string `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`             // 플레이어의 id
	Username     string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`                             // 사용자 닉네임
	GameUserId   string `protobuf:"bytes,4,opt,name=game_user_id,json=gameUserId,proto3" json:"game_user_id,omitempty"`     // gameuserid
	ErrorMessage string `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 오류 메시지 (실패 시)
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *LoginResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LoginResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LoginResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginResponse) GetGameUserId() string {
	if x != nil {
		return x.GameUserId
	}
	return ""
}

func (x *LoginResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type GameStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameStart) Reset() {
	*x = GameStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStart) ProtoMessage() {}

func (x *GameStart) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStart.ProtoReflect.Descriptor instead.
func (*GameStart) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	System   bool   `protobuf:"varint,4,opt,name=system,proto3" json:"system,omitempty"` //시스템메시지인지 표시
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *ChatMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChatMessage) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

// 플레이어 스폰을 위한 정보를 보내는 메시지
type PlayerSpawn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string        `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //지금 들어온 캐릭터의 id
	Nickname string        `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                 //지금 들어온 캐릭터의 닉네임
	Players  []*PlayerInfo `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`                   //이전에 접속해있던 플레이어들의 정보 목록
}

func (x *PlayerSpawn) Reset() {
	*x = PlayerSpawn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerSpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerSpawn) ProtoMessage() {}

func (x *PlayerSpawn) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerSpawn.ProtoReflect.Descriptor instead.
func (*PlayerSpawn) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *PlayerSpawn) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerSpawn) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *PlayerSpawn) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

// 공격 애니메이션 동기화를 위한 메시지
type PlayerAttackAnim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Hash     int32  `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Layer    int32  `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *PlayerAttackAnim) Reset() {
	*x = PlayerAttackAnim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAttackAnim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAttackAnim) ProtoMessage() {}

func (x *PlayerAttackAnim) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAttackAnim.ProtoReflect.Descriptor instead.
func (*PlayerAttackAnim) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerAttackAnim) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerAttackAnim) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *PlayerAttackAnim) GetLayer() int32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

// 개별 플레이어의 정보를 담음
type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *PlayerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

// 로그아웃 요청 메시지
type LogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 로그아웃할 플레이어의 ID
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

func (x *LogoutRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// 로그아웃 응답 메시지
type LogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                              // 로그아웃 성공 여부
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"` // 오류 메시지 (실패 시)
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

func (x *LogoutResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *LogoutResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type PlayerInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId         string           `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerActionType PlayerActionType `protobuf:"varint,2,opt,name=player_action_type,json=playerActionType,proto3,enum=game.PlayerActionType" json:"player_action_type,omitempty"`
	// 위치 업데이트에 사용할 변수들
	Position   *GoVector3 `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Velocity   *GoVector3 `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
	Rotation   *GoVector3 `protobuf:"bytes,5,opt,name=rotation,proto3" json:"rotation,omitempty"`
	Horizontal float32    `protobuf:"fixed32,14,opt,name=horizontal,proto3" json:"horizontal,omitempty"`
	Vertical   float32    `protobuf:"fixed32,15,opt,name=vertical,proto3" json:"vertical,omitempty"`
	IsRunning  bool       `protobuf:"varint,16,opt,name=isRunning,proto3" json:"isRunning,omitempty"`
	// 공격에 사용할 변수들
	AnimHash int32 `protobuf:"varint,6,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"` //공격 애니메이션 해시
	// 피격 효과에 사용할 변수들
	// GoVector3 attack_direction = 7; //피격 시 넉백 방향
	// KnockBackType knockback_type = 8;
	Knockback    *GoVector3      `protobuf:"bytes,9,opt,name=knockback,proto3" json:"knockback,omitempty"` //클라이언트에서 방향, 넉백 타입, 파워에 의해 계산된 넉백 방향
	StunDuration float32         `protobuf:"fixed32,10,opt,name=stun_duration,json=stunDuration,proto3" json:"stun_duration,omitempty"`
	CurrentHp    float32         `protobuf:"fixed32,11,opt,name=current_hp,json=currentHp,proto3" json:"current_hp,omitempty"` //공격을 받은 후 남은 hp
	IsDie        bool            `protobuf:"varint,12,opt,name=is_die,json=isDie,proto3" json:"is_die,omitempty"`              //공격을 받은 이후 사망여부
	Params       *AnimatorParams `protobuf:"bytes,13,opt,name=params,proto3" json:"params,omitempty"`                          //애니메이터 파라미터를 변경하기 위한 값
	// 회피에 사용할 변수들
	DodgeParams *DodgeAnimParams `protobuf:"bytes,17,opt,name=dodge_params,json=dodgeParams,proto3" json:"dodge_params,omitempty"`
}

func (x *PlayerInput) Reset() {
	*x = PlayerInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInput) ProtoMessage() {}

func (x *PlayerInput) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInput.ProtoReflect.Descriptor instead.
func (*PlayerInput) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *PlayerInput) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerInput) GetPlayerActionType() PlayerActionType {
	if x != nil {
		return x.PlayerActionType
	}
	return PlayerActionType_PLAYER_ACTION_UNKNOWN
}

func (x *PlayerInput) GetPosition() *GoVector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *PlayerInput) GetVelocity() *GoVector3 {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *PlayerInput) GetRotation() *GoVector3 {
	if x != nil {
		return x.Rotation
	}
	return nil
}

func (x *PlayerInput) GetHorizontal() float32 {
	if x != nil {
		return x.Horizontal
	}
	return 0
}

func (x *PlayerInput) GetVertical() float32 {
	if x != nil {
		return x.Vertical
	}
	return 0
}

func (x *PlayerInput) GetIsRunning() bool {
	if x != nil {
		return x.IsRunning
	}
	return false
}

func (x *PlayerInput) GetAnimHash() int32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *PlayerInput) GetKnockback() *GoVector3 {
	if x != nil {
		return x.Knockback
	}
	return nil
}

func (x *PlayerInput) GetStunDuration() float32 {
	if x != nil {
		return x.StunDuration
	}
	return 0
}

func (x *PlayerInput) GetCurrentHp() float32 {
	if x != nil {
		return x.CurrentHp
	}
	return 0
}

func (x *PlayerInput) GetIsDie() bool {
	if x != nil {
		return x.IsDie
	}
	return false
}

func (x *PlayerInput) GetParams() *AnimatorParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *PlayerInput) GetDodgeParams() *DodgeAnimParams {
	if x != nil {
		return x.DodgeParams
	}
	return nil
}

type AnimatorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lr          float32 `protobuf:"fixed32,1,opt,name=lr,proto3" json:"lr,omitempty"`
	Fb          float32 `protobuf:"fixed32,2,opt,name=fb,proto3" json:"fb,omitempty"`
	IsBound     bool    `protobuf:"varint,3,opt,name=is_bound,json=isBound,proto3" json:"is_bound,omitempty"`
	IsDown      bool    `protobuf:"varint,4,opt,name=is_down,json=isDown,proto3" json:"is_down,omitempty"`
	MotionIndex float32 `protobuf:"fixed32,5,opt,name=motion_index,json=motionIndex,proto3" json:"motion_index,omitempty"`
}

func (x *AnimatorParams) Reset() {
	*x = AnimatorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnimatorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnimatorParams) ProtoMessage() {}

func (x *AnimatorParams) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnimatorParams.ProtoReflect.Descriptor instead.
func (*AnimatorParams) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *AnimatorParams) GetLr() float32 {
	if x != nil {
		return x.Lr
	}
	return 0
}

func (x *AnimatorParams) GetFb() float32 {
	if x != nil {
		return x.Fb
	}
	return 0
}

func (x *AnimatorParams) GetIsBound() bool {
	if x != nil {
		return x.IsBound
	}
	return false
}

func (x *AnimatorParams) GetIsDown() bool {
	if x != nil {
		return x.IsDown
	}
	return false
}

func (x *AnimatorParams) GetMotionIndex() float32 {
	if x != nil {
		return x.MotionIndex
	}
	return 0
}

type DodgeAnimParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoveX         float32 `protobuf:"fixed32,1,opt,name=move_x,json=moveX,proto3" json:"move_x,omitempty"`
	MoveY         float32 `protobuf:"fixed32,2,opt,name=move_y,json=moveY,proto3" json:"move_y,omitempty"`
	IsBack        bool    `protobuf:"varint,3,opt,name=is_back,json=isBack,proto3" json:"is_back,omitempty"`
	DodgeVertical float32 `protobuf:"fixed32,4,opt,name=dodge_vertical,json=dodgeVertical,proto3" json:"dodge_vertical,omitempty"`
}

func (x *DodgeAnimParams) Reset() {
	*x = DodgeAnimParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DodgeAnimParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DodgeAnimParams) ProtoMessage() {}

func (x *DodgeAnimParams) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DodgeAnimParams.ProtoReflect.Descriptor instead.
func (*DodgeAnimParams) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *DodgeAnimParams) GetMoveX() float32 {
	if x != nil {
		return x.MoveX
	}
	return 0
}

func (x *DodgeAnimParams) GetMoveY() float32 {
	if x != nil {
		return x.MoveY
	}
	return 0
}

func (x *DodgeAnimParams) GetIsBack() bool {
	if x != nil {
		return x.IsBack
	}
	return false
}

func (x *DodgeAnimParams) GetDodgeVertical() float32 {
	if x != nil {
		return x.DodgeVertical
	}
	return 0
}

type MonsterPositionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position *GoVector3 `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *MonsterPositionUpdate) Reset() {
	*x = MonsterPositionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterPositionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterPositionUpdate) ProtoMessage() {}

func (x *MonsterPositionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterPositionUpdate.ProtoReflect.Descriptor instead.
func (*MonsterPositionUpdate) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *MonsterPositionUpdate) GetPosition() *GoVector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

type MonsterSpawn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterId string `protobuf:"bytes,1,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
}

func (x *MonsterSpawn) Reset() {
	*x = MonsterSpawn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterSpawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterSpawn) ProtoMessage() {}

func (x *MonsterSpawn) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterSpawn.ProtoReflect.Descriptor instead.
func (*MonsterSpawn) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *MonsterSpawn) GetMonsterId() string {
	if x != nil {
		return x.MonsterId
	}
	return ""
}

type MonsterAnim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterId     string        `protobuf:"bytes,1,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
	AnimHash      int32         `protobuf:"varint,2,opt,name=anim_hash,json=animHash,proto3" json:"anim_hash,omitempty"`
	ParameterType ParameterType `protobuf:"varint,3,opt,name=parameter_type,json=parameterType,proto3,enum=game.ParameterType" json:"parameter_type,omitempty"`
	IntValue      int32         `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3" json:"int_value,omitempty"`
	FloatValue    float32       `protobuf:"fixed32,5,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	BoolValue     bool          `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
}

func (x *MonsterAnim) Reset() {
	*x = MonsterAnim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterAnim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterAnim) ProtoMessage() {}

func (x *MonsterAnim) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterAnim.ProtoReflect.Descriptor instead.
func (*MonsterAnim) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *MonsterAnim) GetMonsterId() string {
	if x != nil {
		return x.MonsterId
	}
	return ""
}

func (x *MonsterAnim) GetAnimHash() int32 {
	if x != nil {
		return x.AnimHash
	}
	return 0
}

func (x *MonsterAnim) GetParameterType() ParameterType {
	if x != nil {
		return x.ParameterType
	}
	return ParameterType_PARAMETER_UNKNOWN
}

func (x *MonsterAnim) GetIntValue() int32 {
	if x != nil {
		return x.IntValue
	}
	return 0
}

func (x *MonsterAnim) GetFloatValue() float32 {
	if x != nil {
		return x.FloatValue
	}
	return 0
}

func (x *MonsterAnim) GetBoolValue() bool {
	if x != nil {
		return x.BoolValue
	}
	return false
}

type MonsterAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterId    string       `protobuf:"bytes,1,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
	ActionType   ActionType   `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=game.ActionType" json:"action_type,omitempty"`
	MonsterState MonsterState `protobuf:"varint,3,opt,name=monster_state,json=monsterState,proto3,enum=game.MonsterState" json:"monster_state,omitempty"`
	AttackType   AttackType   `protobuf:"varint,4,opt,name=attack_type,json=attackType,proto3,enum=game.AttackType" json:"attack_type,omitempty"`
	TargetId     string       `protobuf:"bytes,5,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Destination  *GoVector3   `protobuf:"bytes,6,opt,name=destination,proto3" json:"destination,omitempty"`
	DodgeOption  float32      `protobuf:"fixed32,7,opt,name=dodge_option,json=dodgeOption,proto3" json:"dodge_option,omitempty"`
}

func (x *MonsterAction) Reset() {
	*x = MonsterAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterAction) ProtoMessage() {}

func (x *MonsterAction) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterAction.ProtoReflect.Descriptor instead.
func (*MonsterAction) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *MonsterAction) GetMonsterId() string {
	if x != nil {
		return x.MonsterId
	}
	return ""
}

func (x *MonsterAction) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_MONSTER_ACTION_UNKNOWN
}

func (x *MonsterAction) GetMonsterState() MonsterState {
	if x != nil {
		return x.MonsterState
	}
	return MonsterState_MONSTER_STATUS_UNKNOWN
}

func (x *MonsterAction) GetAttackType() AttackType {
	if x != nil {
		return x.AttackType
	}
	return AttackType_MONSTER_ATTACK_UNKNOWN
}

func (x *MonsterAction) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *MonsterAction) GetDestination() *GoVector3 {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *MonsterAction) GetDodgeOption() float32 {
	if x != nil {
		return x.DodgeOption
	}
	return 0
}

type MonsterTakeDamage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MonsterId string  `protobuf:"bytes,1,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
	Damage    float32 `protobuf:"fixed32,2,opt,name=damage,proto3" json:"damage,omitempty"`
	CurrentHp float32 `protobuf:"fixed32,3,opt,name=current_hp,json=currentHp,proto3" json:"current_hp,omitempty"` //맞은 이후의 체력
}

func (x *MonsterTakeDamage) Reset() {
	*x = MonsterTakeDamage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MonsterTakeDamage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonsterTakeDamage) ProtoMessage() {}

func (x *MonsterTakeDamage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonsterTakeDamage.ProtoReflect.Descriptor instead.
func (*MonsterTakeDamage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *MonsterTakeDamage) GetMonsterId() string {
	if x != nil {
		return x.MonsterId
	}
	return ""
}

func (x *MonsterTakeDamage) GetDamage() float32 {
	if x != nil {
		return x.Damage
	}
	return 0
}

func (x *MonsterTakeDamage) GetCurrentHp() float32 {
	if x != nil {
		return x.CurrentHp
	}
	return 0
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x87, 0x08, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3c, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a,
	0x0f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e,
	0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x36, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x6f,
	0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x48, 0x00, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x12, 0x46, 0x0a, 0x12,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6e,
	0x69, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x69, 0x6d,
	0x48, 0x00, 0x52, 0x10, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x41, 0x6e, 0x69, 0x6d, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x12,
	0x55, 0x0a, 0x17, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x48,
	0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d, 0x12, 0x3c,
	0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x6f,
	0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x13,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x61, 0x6d, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x54, 0x61, 0x6b,
	0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x35, 0x0a, 0x09, 0x47, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x22, 0x24, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x24, 0x0a,
	0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x22, 0x5c, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x61, 0x6d, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x61, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x0b,
	0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x22, 0x78, 0x0a, 0x0b, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x72, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a, 0x10, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x41, 0x6e, 0x69, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2c,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x0e,
	0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe0, 0x04,
	0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x12, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x72,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2d,
	0x0a, 0x09, 0x6b, 0x6e, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x33, 0x52, 0x09, 0x6b, 0x6e, 0x6f, 0x63, 0x6b, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x74, 0x75, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x70,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x48,
	0x70, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x44, 0x6f, 0x64, 0x67, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x0b, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x87, 0x01, 0x0a, 0x0e, 0x41, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x6c, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x6c, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x02, 0x66, 0x62, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x69, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x7f, 0x0a, 0x0f, 0x44, 0x6f,
	0x64, 0x67, 0x65, 0x41, 0x6e, 0x69, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6d,
	0x6f, 0x76, 0x65, 0x58, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x59, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x42, 0x61, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64, 0x6f,
	0x64, 0x67, 0x65, 0x56, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x15, 0x4d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2d, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x61, 0x77,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xe2, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x69, 0x6d,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x6e, 0x69, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x61, 0x6e, 0x69, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3a, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x47, 0x6f,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x64, 0x67, 0x65, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x64, 0x6f, 0x64, 0x67,
	0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x11, 0x4d, 0x6f, 0x6e, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x61, 0x6b, 0x65, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x48, 0x70, 0x2a, 0x96, 0x01, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4c, 0x41, 0x59, 0x45,
	0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x4b, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x4b, 0x45, 0x44, 0x41, 0x4d, 0x41, 0x47, 0x45,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x44, 0x47, 0x45, 0x10, 0x04, 0x2a, 0x9d, 0x01, 0x0a, 0x0d,
	0x4b, 0x6e, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a,
	0x11, 0x4b, 0x4e, 0x4f, 0x43, 0x4b, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x4e, 0x4f, 0x43, 0x4b, 0x42, 0x41, 0x43,
	0x4b, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x4e, 0x4f, 0x43,
	0x4b, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x4e,
	0x4f, 0x43, 0x4b, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x10, 0x03, 0x12, 0x12,
	0x0a, 0x0e, 0x4b, 0x4e, 0x4f, 0x43, 0x4b, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x50, 0x55, 0x4c, 0x4c,
	0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4b, 0x4e, 0x4f, 0x43, 0x4b, 0x42, 0x41, 0x43, 0x4b, 0x5f,
	0x42, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x4e, 0x4f, 0x43, 0x4b,
	0x42, 0x41, 0x43, 0x4b, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x2a, 0x79, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52,
	0x5f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x50,
	0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x10, 0x04, 0x2a, 0x8a, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02, 0x12,
	0x22, 0x0a, 0x1e, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x03, 0x2a, 0xc4, 0x01, 0x0a, 0x0c, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x53, 0x50, 0x41, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f,
	0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x44, 0x4c,
	0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13,
	0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x41, 0x53, 0x48, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x4f, 0x44, 0x47, 0x45, 0x10, 0x05, 0x12,
	0x19, 0x0a, 0x15, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x10, 0x06, 0x2a, 0xa6, 0x02, 0x0a, 0x0a, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x4f, 0x4e,
	0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x30, 0x31,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54,
	0x54, 0x41, 0x43, 0x4b, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x30, 0x32, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43,
	0x4b, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x30, 0x33, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c,
	0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x04, 0x12, 0x20,
	0x0a, 0x1c, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b,
	0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x30, 0x31, 0x10, 0x0b,
	0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x4b, 0x5f, 0x4d, 0x49, 0x44, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x30, 0x31, 0x10, 0x15,
	0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54, 0x41,
	0x43, 0x4b, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x30, 0x31, 0x10,
	0x1f, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x4f, 0x4e, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x41, 0x54, 0x54,
	0x41, 0x43, 0x4b, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x30,
	0x31, 0x10, 0x29, 0x42, 0x11, 0x5a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_messages_proto_goTypes = []any{
	(PlayerActionType)(0),         // 0: game.PlayerActionType
	(KnockBackType)(0),            // 1: game.KnockBackType
	(ParameterType)(0),            // 2: game.ParameterType
	(ActionType)(0),               // 3: game.ActionType
	(MonsterState)(0),             // 4: game.MonsterState
	(AttackType)(0),               // 5: game.AttackType
	(*GameMessage)(nil),           // 6: game.GameMessage
	(*GoVector3)(nil),             // 7: game.GoVector3
	(*Ping)(nil),                  // 8: game.Ping
	(*Pong)(nil),                  // 9: game.Pong
	(*ServerStarted)(nil),         // 10: game.ServerStarted
	(*LoginRequest)(nil),          // 11: game.LoginRequest
	(*LoginResponse)(nil),         // 12: game.LoginResponse
	(*GameStart)(nil),             // 13: game.GameStart
	(*ChatMessage)(nil),           // 14: game.ChatMessage
	(*PlayerSpawn)(nil),           // 15: game.PlayerSpawn
	(*PlayerAttackAnim)(nil),      // 16: game.PlayerAttackAnim
	(*PlayerInfo)(nil),            // 17: game.PlayerInfo
	(*LogoutRequest)(nil),         // 18: game.LogoutRequest
	(*LogoutResponse)(nil),        // 19: game.LogoutResponse
	(*PlayerInput)(nil),           // 20: game.PlayerInput
	(*AnimatorParams)(nil),        // 21: game.AnimatorParams
	(*DodgeAnimParams)(nil),       // 22: game.DodgeAnimParams
	(*MonsterPositionUpdate)(nil), // 23: game.MonsterPositionUpdate
	(*MonsterSpawn)(nil),          // 24: game.MonsterSpawn
	(*MonsterAnim)(nil),           // 25: game.MonsterAnim
	(*MonsterAction)(nil),         // 26: game.MonsterAction
	(*MonsterTakeDamage)(nil),     // 27: game.MonsterTakeDamage
}
var file_messages_proto_depIdxs = []int32{
	11, // 0: game.GameMessage.login_request:type_name -> game.LoginRequest
	12, // 1: game.GameMessage.login_response:type_name -> game.LoginResponse
	18, // 2: game.GameMessage.logout_request:type_name -> game.LogoutRequest
	19, // 3: game.GameMessage.logout_response:type_name -> game.LogoutResponse
	13, // 4: game.GameMessage.game_start:type_name -> game.GameStart
	14, // 5: game.GameMessage.chat_message:type_name -> game.ChatMessage
	8,  // 6: game.GameMessage.ping:type_name -> game.Ping
	9,  // 7: game.GameMessage.pong:type_name -> game.Pong
	20, // 8: game.GameMessage.player_input:type_name -> game.PlayerInput
	15, // 9: game.GameMessage.player_spawn:type_name -> game.PlayerSpawn
	16, // 10: game.GameMessage.player_attack_anim:type_name -> game.PlayerAttackAnim
	24, // 11: game.GameMessage.monster_spawn:type_name -> game.MonsterSpawn
	23, // 12: game.GameMessage.monster_position_update:type_name -> game.MonsterPositionUpdate
	25, // 13: game.GameMessage.monster_anim:type_name -> game.MonsterAnim
	26, // 14: game.GameMessage.monster_action:type_name -> game.MonsterAction
	27, // 15: game.GameMessage.monster_take_damage:type_name -> game.MonsterTakeDamage
	10, // 16: game.GameMessage.server_started:type_name -> game.ServerStarted
	17, // 17: game.PlayerSpawn.players:type_name -> game.PlayerInfo
	0,  // 18: game.PlayerInput.player_action_type:type_name -> game.PlayerActionType
	7,  // 19: game.PlayerInput.position:type_name -> game.GoVector3
	7,  // 20: game.PlayerInput.velocity:type_name -> game.GoVector3
	7,  // 21: game.PlayerInput.rotation:type_name -> game.GoVector3
	7,  // 22: game.PlayerInput.knockback:type_name -> game.GoVector3
	21, // 23: game.PlayerInput.params:type_name -> game.AnimatorParams
	22, // 24: game.PlayerInput.dodge_params:type_name -> game.DodgeAnimParams
	7,  // 25: game.MonsterPositionUpdate.position:type_name -> game.GoVector3
	2,  // 26: game.MonsterAnim.parameter_type:type_name -> game.ParameterType
	3,  // 27: game.MonsterAction.action_type:type_name -> game.ActionType
	4,  // 28: game.MonsterAction.monster_state:type_name -> game.MonsterState
	5,  // 29: game.MonsterAction.attack_type:type_name -> game.AttackType
	7,  // 30: game.MonsterAction.destination:type_name -> game.GoVector3
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GameMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GoVector3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ServerStarted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GameStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerSpawn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerAttackAnim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*LogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*AnimatorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*DodgeAnimParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*MonsterPositionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*MonsterSpawn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*MonsterAnim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*MonsterAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*MonsterTakeDamage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*GameMessage_LoginRequest)(nil),
		(*GameMessage_LoginResponse)(nil),
		(*GameMessage_LogoutRequest)(nil),
		(*GameMessage_LogoutResponse)(nil),
		(*GameMessage_GameStart)(nil),
		(*GameMessage_ChatMessage)(nil),
		(*GameMessage_Ping)(nil),
		(*GameMessage_Pong)(nil),
		(*GameMessage_PlayerInput)(nil),
		(*GameMessage_PlayerSpawn)(nil),
		(*GameMessage_PlayerAttackAnim)(nil),
		(*GameMessage_MonsterSpawn)(nil),
		(*GameMessage_MonsterPositionUpdate)(nil),
		(*GameMessage_MonsterAnim)(nil),
		(*GameMessage_MonsterAction)(nil),
		(*GameMessage_MonsterTakeDamage)(nil),
		(*GameMessage_ServerStarted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
